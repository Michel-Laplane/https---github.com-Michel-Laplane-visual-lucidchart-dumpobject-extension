import { SerializedUpstreamConfig } from '../data/datasource/serializedupstreamconfig';
import { SerializedSchema } from '../data/serializedfield/serializedschema';
import { JsonSerializable } from '../jsonserializable';
/** @ignore until spreadsheet integration is ready for launch (CHART-51946) */
export declare enum LucidSpreadsheetIntegrationFailureType {
    AuthorizationFailure = "AuthorizationFailure",
    GenericFailure = "GenericFailure",
    UserCancelled = "UserCanceled"
}
/** @ignore until spreadsheet integration is ready for launch (CHART-51946) */
export declare const lucidSpreadsheetIntegrationFailureTypeValidator: (x: unknown) => x is LucidSpreadsheetIntegrationFailureType;
/** @ignore until spreadsheet integration is ready for launch (CHART-51946) */
export type ImportedResults = {
    'upstreamConfig': SerializedUpstreamConfig;
    'collections': {
        'collectionId': string;
        'headerRow': number;
        'schema': SerializedSchema;
        'upstreamConfig'?: JsonSerializable;
    }[];
};
/** @ignore until spreadsheet integration is ready for launch (CHART-51946) */
export declare const isImportedResults: (x: unknown) => x is ImportedResults;
/** @ignore until spreadsheet integration is ready for launch (CHART-51946) */
export declare class ListChooser {
    readonly getList: () => Promise<{
        header: string[];
        rows: {
            id: string;
            values: string[];
            icon: string;
        }[];
    } | LucidSpreadsheetIntegrationFailureType>;
    constructor(getList: () => Promise<{
        header: string[];
        rows: {
            id: string;
            values: string[];
            icon: string;
        }[];
    } | LucidSpreadsheetIntegrationFailureType>);
}
/** @ignore until spreadsheet integration is ready for launch (CHART-51946) */
export declare class CustomDetailsChooser {
    readonly getConfig: () => Promise<string | LucidSpreadsheetIntegrationFailureType>;
    constructor(getConfig: () => Promise<string | LucidSpreadsheetIntegrationFailureType>);
}
/** @ignore until spreadsheet integration is ready for launch (CHART-51946) */
export declare abstract class LucidSpreadsheetIntegration {
    abstract labelDescription: string;
    abstract labelIconUrl: string;
    abstract dataConnectorName: string;
    addCardsIntegration: boolean;
    abstract configChooser: ListChooser | CustomDetailsChooser;
    abstract getMultipleSheetsForSpreadsheetDetails(spreadsheetDetails: string): Promise<Map<string, string> | LucidSpreadsheetIntegrationFailureType>;
}
